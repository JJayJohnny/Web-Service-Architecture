version: "3"

services:
  aui-eureka:
    build:
      context: AUI-eureka/.
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8090:8080"
  
  aui-book-1:
    build:
      context: AUI-book/.
      dockerfile: Dockerfile
    restart: always
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://aui-eureka:8080/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "1"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://aui-book-db:5432/book_db"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
      SPRING_DATASOURCE_USERNAME: "user"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"

  aui-book-2:
    build:
      context: AUI-book/.
      dockerfile: Dockerfile
    restart: always
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://aui-eureka:8080/eureka"
      EUREKA_INSTANCE_INSTANCE_ID: "2"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://aui-book-db:5432/book_db"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
      SPRING_DATASOURCE_USERNAME: "user"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"

  
  aui-author:
    build:
      context: AUI-author/.
      dockerfile: Dockerfile
    restart: always
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://aui-eureka:8080/eureka"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://aui-author-db:5432/author_db"
      SPRING_DATASOURCE_DRIVERCLASSNAME: "org.postgresql.Driver"
      SPRING_DATASOURCE_USERNAME: "user"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"

  aui-gateway:
    build:
      context: AUI-gateway/.
      dockerfile: Dockerfile
    restart: always
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://aui-eureka:8080/eureka"
      AUI_GATEWAY_HOST: "aui-gateway:8080"
  
  aui-ng:
    build:
      context: AUI-ng/.
      dockerfile: Dockerfile
    restart: always
    environment:
      API_URL: "http://aui-gateway:8080/api"
    ports:
      - "8080:80"

  aui-book-db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_DB: "book_db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    volumes:
      - book_db_data:/var/lib/postgresql/data

  aui-author-db:
    image: postgres:16.1
    restart: always
    environment:
      POSTGRES_DB: "author_db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    volumes:
      - author_db_data:/var/lib/postgresql/data
volumes:
  book_db_data:
  author_db_data: